{"ast":null,"code":"var _jsxFileName = \"/Users/jeevanjyotsingh/Desktop/Projects/MadHacks/futuregram/src/components/AddPostPage.js\",\n  _s = $RefreshSig$();\n// AddPostPage.js\nimport React, { useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPostPage() {\n  _s();\n  const [imageName, setImageName] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await addDoc(collection(db, 'posts'), {\n        title: new Date().toLocaleString(),\n        imageName\n      });\n      console.log('Post added to Firebase');\n      setImageName(''); // Clear input field\n      navigate('/'); // Navigate back to homepage after submitting\n    } catch (error) {\n      console.error('Error adding post to Firebase:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Image Name\",\n        value: imageName,\n        onChange: e => setImageName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostPage, \"m2uyQFAiloL9JwmpYaBuHWc/jRE=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPostPage;\nexport default AddPostPage;\nvar _c;\n$RefreshReg$(_c, \"AddPostPage\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","useNavigate","jsxDEV","_jsxDEV","AddPostPage","_s","imageName","setImageName","navigate","handleSubmit","e","preventDefault","title","Date","toLocaleString","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/jeevanjyotsingh/Desktop/Projects/MadHacks/futuregram/src/components/AddPostPage.js"],"sourcesContent":["// AddPostPage.js\nimport React, { useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AddPostPage() {\n  const [imageName, setImageName] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await addDoc(collection(db, 'posts'), {\n        title: new Date().toLocaleString(),\n        imageName,\n      });\n      console.log('Post added to Firebase');\n      setImageName(''); // Clear input field\n      navigate('/'); // Navigate back to homepage after submitting\n    } catch (error) {\n      console.error('Error adding post to Firebase:', error);\n    }\n  };\n\n  return (\n    <div className=\"add-post-page\">\n      <h2>Add New Post</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Image Name\"\n          value={imageName}\n          onChange={(e) => setImageName(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddPostPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,EAAE,QAAQ,mBAAmB;AACtC,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMW,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMX,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC,EAAE;QACpCc,KAAK,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;QAClCR;MACF,CAAC,CAAC;MACFS,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCT,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;MAClBC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAMqB,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBAC3BhB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAErB,SAAU;QACjBsB,QAAQ,EAAGlB,CAAC,IAAKH,YAAY,CAACG,CAAC,CAACmB,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClB,EAAA,CAlCQD,WAAW;EAAA,QAEDH,WAAW;AAAA;AAAA6B,EAAA,GAFrB1B,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}