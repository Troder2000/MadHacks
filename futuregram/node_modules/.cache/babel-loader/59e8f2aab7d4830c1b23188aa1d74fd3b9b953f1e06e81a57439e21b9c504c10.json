{"ast":null,"code":"var _jsxFileName = \"/Users/jeevanjyotsingh/Desktop/Projects/MadHacks/futuregram/src/components/AddPostPage.js\",\n  _s = $RefreshSig$();\n// AddPostPage.js\nimport React, { useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPostPage() {\n  _s();\n  const [fileName, setFileName] = useState('');\n  const [delay, setDelay] = useState(''); // State for time delay\n  const [isDelayInHours, setIsDelayInHours] = useState(false); // Track if delay is in hours\n  const navigate = useNavigate();\n\n  // Handle file selection and extract the file name\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileName(file.name);\n    }\n  };\n\n  // Handle delay input and convert to hours if needed\n  const handleDelayChange = e => {\n    const value = parseInt(e.target.value, 10);\n    setIsDelayInHours(value > 300);\n    setDelay(value);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Determine whether to store delay in minutes or hours\n      const delayValue = isDelayInHours ? (delay / 60).toFixed(2) : delay;\n      const delayUnit = isDelayInHours ? 'hours' : 'minutes';\n\n      // Calculate display time based on delay\n      const currentTime = new Date();\n      const displayTime = new Date(currentTime.getTime() + delay * 60000);\n\n      // Save file name, delay, and display time to Firebase\n      await addDoc(collection(db, 'posts'), {\n        title: currentTime.toLocaleString(),\n        fileName,\n        delay: `${delayValue} ${delayUnit}`,\n        displayTime: displayTime.toISOString()\n      });\n      console.log('File name and visibility delay added to Firebase');\n      setFileName('');\n      setDelay('');\n      setIsDelayInHours(false);\n      navigate('/');\n    } catch (error) {\n      console.error('Error adding data to Firebase:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Time before it's visible (in minutes)\",\n        value: delay,\n        onChange: handleDelayChange,\n        min: \"0\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), isDelayInHours && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"(Stored in hours)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !fileName || !delay,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostPage, \"OsOd9XpoZxshl/FMB7A/c/rqdRQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPostPage;\nexport default AddPostPage;\nvar _c;\n$RefreshReg$(_c, \"AddPostPage\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","useNavigate","jsxDEV","_jsxDEV","AddPostPage","_s","fileName","setFileName","delay","setDelay","isDelayInHours","setIsDelayInHours","navigate","handleFileChange","e","file","target","files","name","handleDelayChange","value","parseInt","handleSubmit","preventDefault","delayValue","toFixed","delayUnit","currentTime","Date","displayTime","getTime","title","toLocaleString","toISOString","console","log","error","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","min","required","disabled","_c","$RefreshReg$"],"sources":["/Users/jeevanjyotsingh/Desktop/Projects/MadHacks/futuregram/src/components/AddPostPage.js"],"sourcesContent":["// AddPostPage.js\nimport React, { useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AddPostPage() {\n  const [fileName, setFileName] = useState('');\n  const [delay, setDelay] = useState(''); // State for time delay\n  const [isDelayInHours, setIsDelayInHours] = useState(false); // Track if delay is in hours\n  const navigate = useNavigate();\n\n  // Handle file selection and extract the file name\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileName(file.name);\n    }\n  };\n\n  // Handle delay input and convert to hours if needed\n  const handleDelayChange = (e) => {\n    const value = parseInt(e.target.value, 10);\n    setIsDelayInHours(value > 300);\n    setDelay(value);\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Determine whether to store delay in minutes or hours\n      const delayValue = isDelayInHours ? (delay / 60).toFixed(2) : delay;\n      const delayUnit = isDelayInHours ? 'hours' : 'minutes';\n\n      // Calculate display time based on delay\n      const currentTime = new Date();\n      const displayTime = new Date(currentTime.getTime() + delay * 60000);\n\n      // Save file name, delay, and display time to Firebase\n      await addDoc(collection(db, 'posts'), {\n        title: currentTime.toLocaleString(),\n        fileName,\n        delay: `${delayValue} ${delayUnit}`,\n        displayTime: displayTime.toISOString(),\n      });\n\n      console.log('File name and visibility delay added to Firebase');\n      setFileName('');\n      setDelay('');\n      setIsDelayInHours(false);\n      navigate('/');\n    } catch (error) {\n      console.error('Error adding data to Firebase:', error);\n    }\n  };\n\n  return (\n    <div className=\"add-post-page\">\n      <h2>Add New Post</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"file\"\n          onChange={handleFileChange}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Time before it's visible (in minutes)\"\n          value={delay}\n          onChange={handleDelayChange}\n          min=\"0\"\n          required\n        />\n        {isDelayInHours && <p>(Stored in hours)</p>}\n        <button type=\"submit\" disabled={!fileName || !delay}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddPostPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}