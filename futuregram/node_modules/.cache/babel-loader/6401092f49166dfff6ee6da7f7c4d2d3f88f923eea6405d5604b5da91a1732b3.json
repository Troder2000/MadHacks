{"ast":null,"code":"var _jsxFileName = \"/Users/jeevanjyotsingh/Desktop/Projects/MadHacks/futuregram/src/components/AddPostPage.js\",\n  _s = $RefreshSig$();\n// AddPostPage.js\nimport React, { useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPostPage() {\n  _s();\n  const [fileName, setFileName] = useState('');\n  const [delay, setDelay] = useState(''); // Delay time in minutes\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileName(file.name);\n    }\n  };\n  const handleDelayChange = e => {\n    setDelay(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Calculate the display time based on the delay in minutes\n      const currentTime = new Date();\n      const displayTime = new Date(currentTime.getTime() + delay * 60000);\n\n      // Save file name, delay, and display time to Firebase\n      await addDoc(collection(db, 'posts'), {\n        title: currentTime.toLocaleString(),\n        fileName,\n        delay: `${delay} minutes`,\n        // Store delay in minutes\n        displayTime: displayTime.toISOString()\n      });\n      console.log('File name and delay added to Firebase');\n      setFileName('');\n      setDelay('');\n      navigate('/');\n    } catch (error) {\n      console.error('Error adding data to Firebase:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Time before it's visible (in minutes)\",\n        value: delay,\n        onChange: handleDelayChange,\n        min: \"0\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !fileName || !delay,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPostPage, \"6xAR6giRIJCKdwBPJZRhzuX9xKc=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPostPage;\nexport default AddPostPage;\nvar _c;\n$RefreshReg$(_c, \"AddPostPage\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","useNavigate","jsxDEV","_jsxDEV","AddPostPage","_s","fileName","setFileName","delay","setDelay","navigate","handleFileChange","e","file","target","files","name","handleDelayChange","value","handleSubmit","preventDefault","currentTime","Date","displayTime","getTime","title","toLocaleString","toISOString","console","log","error","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","min","required","disabled","_c","$RefreshReg$"],"sources":["/Users/jeevanjyotsingh/Desktop/Projects/MadHacks/futuregram/src/components/AddPostPage.js"],"sourcesContent":["// AddPostPage.js\nimport React, { useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AddPostPage() {\n  const [fileName, setFileName] = useState('');\n  const [delay, setDelay] = useState(''); // Delay time in minutes\n  const navigate = useNavigate();\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setFileName(file.name);\n    }\n  };\n\n  const handleDelayChange = (e) => {\n    setDelay(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Calculate the display time based on the delay in minutes\n      const currentTime = new Date();\n      const displayTime = new Date(currentTime.getTime() + delay * 60000);\n\n      // Save file name, delay, and display time to Firebase\n      await addDoc(collection(db, 'posts'), {\n        title: currentTime.toLocaleString(),\n        fileName,\n        delay: `${delay} minutes`, // Store delay in minutes\n        displayTime: displayTime.toISOString(),\n      });\n\n      console.log('File name and delay added to Firebase');\n      setFileName('');\n      setDelay('');\n      navigate('/');\n    } catch (error) {\n      console.error('Error adding data to Firebase:', error);\n    }\n  };\n\n  return (\n    <div className=\"add-post-page\">\n      <h2>Add New Post</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"file\"\n          onChange={handleFileChange}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Time before it's visible (in minutes)\"\n          value={delay}\n          onChange={handleDelayChange}\n          min=\"0\"\n          required\n        />\n        <button type=\"submit\" disabled={!fileName || !delay}>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddPostPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}